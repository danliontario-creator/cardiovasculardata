sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
cbind(c_control, c_ab, c_a, c_b) ->x
x
c_control <- c(1,0,-1,0,-1/4,1/4,-1/4,1/4)
c_ab <- c(0,-1/2,1/2,0,0,-1/2,1/2,0)
c_a <- c(0,1,0,0,0,-1,0,0)
c_b<- c(0,1,0,0,0,-1,0,0)
sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
cbind(c_control, c_ab, c_a, c_b) ->x
x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) <-x
turkey %>% mutate(diet = factor(diet)) -> turkey
turkey
c_control <- c(1,-1,-1/4,1/4,-1/4,1/4)
c_ab <- c(0,-1/2,1/2,0,-1/2,1/2)
c_a <- c(0,1,0,0,-1,0)
c_b<- c(0,1,0,0,-1,0)
sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
cbind(c_control, c_ab, c_a, c_b) ->x
x
contrasts(turkey$diet) <-x
contrasts(turkey$diet) =cbind(c_control, c_ab, c_a, c_b)
contrasts(turkey$diet) =cbind(c_control, c_ab, c_a, c_b)
x -> contrasts(turkey$diet)
c_control <- c(-3/4,1/4,1/4,1/4)
c_ab <- c(-1/2,1/2,-1/2,1/2)
c_a <- c(0,1,0,-1)
c_b<- c(1,0,-1,0)
sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
cbind(c_control, c_ab, c_a, c_b) ->x
x
x -> contrasts(turkey$diet)
x -> contrasts(turkey$diet)
x -> contrasts(turkey$diet)
x -> contrasts(turkey$diet)
x -> contrasts(turkey$diet)
x -> contrasts(turkey$diet)
library(tidyverse)
my_url <- "http://ritsokiguess.site/datafiles/turkey.csv"
turkey <- read_csv(my_url)
turkey
ggplot(turkey, aes(x= diet, y = wt.gain))+geom_boxplot()
turkey %>% mutate(diet = factor(diet)) -> turkey
turkey
c_control <- c(1,-1,-1/4,1/4,-1/4,1/4)
c_ab <- c(0,-1/2,1/2,0,-1/2,1/2)
c_a <- c(0,1,0,0,-1,0)
c_b<- c(0,1,0,0,-1,0)
c_control <- c(-3/4,1/4,1/4,1/4)
c_ab <- c(-1/2,1/2,-1/2,1/2)
c_a <- c(0,1,0,-1)
c_b<- c(1,0,-1,0)
sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
cbind(c_control, c_ab, c_a, c_b) ->x
x
x -> contrasts(turkey$diet)
sum(c_control)
sum(c_ab)
sum(c_a)
sum(c_b)
c_control <- c(-1,1/4,1/4,1/4,1/4)
c_ab <- c(-1/2,1/2,-1/2,1/2,0)
c_a <- c(0,1,0,-1,0)
c_b<- c(1,0,-1,0,0)
cbind(c_control, c_ab, c_a, c_b) ->x
x
x -> contrasts(turkey$diet)
turkey.1 <- lm(diet~wt.gain , data = turkey)
summary(turkey.1)
turkey.1 <- lm(wt.gain~diet , data = turkey)
summary(turkey.1)
cbind(c_control, c_ab, c_a, c_b) ->x
x -> contrasts(turkey$diet)
turkey.1 <- lm(wt.gain~diet , data = turkey)
summary(turkey.1)
my_url <- "http://ritsokiguess.site/datafiles/jellyfish.csv"
jelly<- read_csv(my_url)
jelly
ggplot(jelly, aes(x = Width, y = Length, colour = Location)) + geom_point() +
geom_smooth(method = "lm")
jelly %>%
select(Width, Length) %>%
as.matrix() -> measure
head(measure)
jelly.1 <- manova(measure ~ Location, data = jelly)
summary(jelly.1)
library(tidyverse)
library(car)
library(lme4)
library(MVTests)
library(MASS, exclude = "select")
my_url <- "http://ritsokiguess.site/datafiles/paw_inflammation.csv"
paw <- read_csv(my_url)
paw
paw %>%
pivot_longer(starts_with("x"), values_to = "inflam") -> paw_long
paw_long
paw %>%
pivot_longer(starts_with("x"), names_to= time, values_to = "inflam") -> paw_long
paw %>%
pivot_longer(starts_with("x"), names_to= "time", values_to = "inflam") -> paw_long
paw_long
ggplot(means, aes(x = time, y = in_flam, colour = Treatment, group = Treatment)) +
geom_point() + geom_line()
ggplot(paw_long, aes(x = time, y = in_flam, colour = Treatment, group = Treatment)) +
geom_point() + geom_line()
ggplot(paw_long, aes(x = time, y = inflam, colour = Treatment, group = Treatment)) +
geom_point() + geom_line()
ggplot(paw_long, aes(x = time, y = inflam, colour = Treatment, group = Treatment)) +
stats_summary(fun = mean, geom= "point")+ stats_summary(fun = mean, geom= "line")
ggplot(paw_long, aes(x = time, y = inflam, colour = Treatment, group = Treatment)) +
stat_summary(fun = mean, geom = "point") + stat_summary(fun = mean, geom = "line")
paw %>% select(starts_with("x")) %>%
as.matrix() -> response
response
paw.1 <- lm(response ~ Treatment, data = paw)
times <- colnames(response)
times.df <- data.frame(times = factor(times))
paw.2 <- Manova(paw.1, idata = times.df, idesign = ~ times)
summary(paw.2)
paw.1 <- lm(response ~ Treatment, data = paw)
summary(paw.1)
times <- colnames(response)
times.df <- data.frame(times = factor(times))
paw.2 <- Manova(paw.1, idata = times.df, idesign = ~ times)
summary(paw.2)
t.1 <- aov(X030 ~ Treatment, data = paw)
summary(t.1)
t.2 <- aov(X100 ~ Treatment, data = paw)
summary(t.2)
t.1 <- aov(X200 ~ Treatment, data = paw)
summary(t.1)
t.4 <- aov(X300 ~ Treatment, data = paw)
summary(t.4)
t.3 <- aov(X200 ~ Treatment, data = paw)
summary(t.3)
t.2 <- aov(X100 ~ Treatment, data = paw)
summary(t.2)
t.1 <- aov(X030 ~ Treatment, data = paw)
summary(t.1)
t.1 <- aov(X030 ~ Treatment, data = paw)
summary(t.1)
t.2 <- aov(X100 ~ Treatment, data = paw)
summary(t.2)
t.3 <- aov(X200 ~ Treatment, data = paw)
summary(t.3)
t.4 <- aov(X300 ~ Treatment, data = paw)
summary(t.4)
t.1 <- aov(X030 ~ Treatment = "Curcuma longa" + Treatment = "Dexamethasone", data = paw)
t.1 <- aov(X030 ~ Treatment == "Curcuma longa" + Treatment == "Dexamethasone", data = paw)
t.1 <- aov(X030 ~ Curcuma longa + Dexamethasone, data = paw)
t.1 <- aov(X030 ~ Control + Dexamethasone, data = paw)
t.1 <- aov(X030 ~ Treatment + Dexamethasone, data = paw)
t.1 <- aov(X030 ~ Treatment, data = paw)
TukeyHSD(t.1)
t.1 <- aov(X030 ~ Treatment, data = paw)
summary(t.1)
TukeyHSD(t.1)
TukeyHSD(t.2)
TukeyHSD(t.3)
TukeyHSD(t.4)
my_url <- "http://ritsokiguess.site/datafiles/hemophilia_rrcov.csv"
hemo <- read_csv(my_url)
hemo
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point(facet_wrap(gr))
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(gr)
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
my_url <- "http://ritsokiguess.site/datafiles/hemophilia_rrcov.csv"
hemo <- read_csv(my_url)
hemo
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(factor(gr), scales = "free")
ggplot(hemo, aes(x=AHFactivity, yp=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, group=gr)) +geom_point()+
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, group=gr)) +geom_point()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen)) +geom_point()+facet_wrap(gr, scales = "free")
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen)) +geom_point()+ facet_wrap(gr)
hemo %>% group_by(gr) %>% ggplot(hemo, aes(x=AHFactivity, y=AHFantigen)) +geom_point()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, fill = gr)) +geom_point()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, colour = gr)) +geom_point()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, colour = gr)) +geom_point() +geom_line()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, colour = gr)) +geom_point() +geom_line_smooth()
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, colour = gr)) +geom_point() +geom_smooth()
hemo.1 <- lda(gr~AHFactivity + AHFantigen, data = hemo)
hemo.1 <- lda(gr~AHFactivity + AHFantigen, data = hemo)
summary(hemo.1)
hemo.1 <- lda(gr~AHFactivity + AHFantigen, data = hemo)
hemo.1
p <- predict(hemo.1)
p <- predict(hemo.1)
p
hilo.2 %>% select(gr, AHFactivity, AHFantigen, LD1) %>%
arrange(desc(LD1))
hemo.2 %>% select(gr, AHFactivity, AHFantigen, LD1) %>%
arrange(desc(LD1))
hemo.1 %>% select(gr, AHFactivity, AHFantigen, LD1) %>%
arrange(desc(LD1))
hemo.2 <- predict(hemo.1)
hemo.2 %>% select(gr, AHFactivity, AHFantigen, LD1) %>%
arrange(desc(LD1))
hemo.2 <- predict(hemo.1)
hemo.2 %>% augment(hemo.2)
hemo.2 <- predict(hemo.1)
hemo.2
hilo.2 %>%
mutate(across(starts_with("posterior"), \(p) round(p, 4))) %>%
select(-LD1)
hemo.2 %>%
mutate(across(starts_with("posterior"), \(p) round(p, 4))) %>%
select(-LD1)
library(tidyverse)
library(car)
library(lme4)
library(MVTests)
library(MASS, exclude = "select")
my_url <- "http://ritsokiguess.site/datafiles/paw_inflammation.csv"
paw <- read_csv(my_url)
paw
paw %>%
pivot_longer(starts_with("x"), names_to= "time", values_to = "inflam") -> paw_long
paw_long
ggplot(paw_long, aes(x = time, y = inflam, colour = Treatment, group = Treatment)) +
stat_summary(fun = mean, geom = "point") + stat_summary(fun = mean, geom = "line")
paw %>% select(starts_with("x")) %>%
as.matrix() -> response
response
paw.1 <- lm(response ~ Treatment, data = paw)
summary(paw.1)
t.1 <- aov(X030 ~ Treatment, data = paw)
summary(t.1)
TukeyHSD(t.1)
t.2 <- aov(X100 ~ Treatment, data = paw)
summary(t.2)
TukeyHSD(t.2)
t.3 <- aov(X200 ~ Treatment, data = paw)
summary(t.3)
TukeyHSD(t.3)
t.4 <- aov(X300 ~ Treatment, data = paw)
summary(t.4)
TukeyHSD(t.4)
times <- colnames(response)
times.df <- data.frame(times = factor(times))
paw.2 <- Manova(paw.1, idata = times.df, idesign = ~ times)
summary(paw.2)
my_url <- "http://ritsokiguess.site/datafiles/hemophilia_rrcov.csv"
hemo <- read_csv(my_url)
hemo
ggplot(hemo, aes(x=AHFactivity, y=AHFantigen, colour = gr)) +geom_point() +geom_smooth()
hemo.1 <- lda(gr~AHFactivity + AHFantigen, data = hemo)
hemo.1
hemo.2 <- predict(hemo.1)
hemo.2
hemo.2 %>%
mutate(across(starts_with("posterior"), \(p) round(p, 4))) %>%
select(-LD1)
p <- predict(hemo.1)
hemo.2 <- cbind(hemo.1, p)
p <- predict(hemo.1)
hemo.2 <- cbind(hemo.1, p)
p <- predict(hemo.1)
hemo.2 <- cbind(hemo.1, p)
p <- predict(hemo.1)
hemo.2 <- cbind(hemo, p)
hemo.2 %>%
mutate(across(starts_with("posterior"), \(p) round(p, 4))) %>%
select(-LD1)
ggplot(hemo.2, aes(x = gr, y = LD1)) + geom_boxplot
ggplot(hemo.2, aes(x = class, y = LD1)) + geom_boxplot
ggplot(hemo.2, aes(x = class, y = LD1)) + geom_boxplot()
ggplot(hemo.2, aes(x = gr, y = LD1)) + geom_boxplot()
hilo.2 %>% select(AHFantigen, AHFactivity, gr, class)
hemo.2 %>% select(AHFantigen, AHFactivity, gr, class)
with(hemo.2, table(obs = gr, pred = class))
hemo.2 %>% select(AHFantigen, AHFactivity, gr, class)
with(hemo.2, table(obs = gr, pred = class))
hemo.2 %>%
mutate(across(starts_with("posterior"), \(p) round(p, 4))) %>%
select(-LD1)
library(MASS, exclude = "select")
library(tidyverse)
library(marginaleffects)
library(broom)
library(nnet)
library(emmeans)
ocd_data <- read.csv('/Users/danli/Documents/healthcare_analysis/sep29:25 new analysis/ocd_patient_dataset.csv')
aov_res <- aov(Y.BOCS.Score..Compulsions. ~ Compulsion.Type * Depression.Diagnosis,
data = ocd_data)
summary(aov_res)
emm2 <- emmeans(aov_res, ~ Depression.Diagnosis | Compulsion.Type)
pairs(emm2, adjust = "bonferroni")
ggplot(ocd_data, aes(x = Compulsion.Type,
y = Y.BOCS.Score..Compulsions.,
color = Depression.Diagnosis, group = Depression.Diagnosis)) +
stat_summary(fun = mean, geom = "point", position = position_dodge(0.2)) +
stat_summary(fun = mean, geom = "line", position = position_dodge(0.2)) +
stat_summary(fun.data = mean_se, geom = "errorbar", width = 0.2, position = position_dodge(0.2)) +
labs(title = "Interaction of Compulsion Type × Depression Diagnosis",
y = "Mean Y-BOCS Compulsion Score")
aov_res2 <- aov(Y.BOCS.Score..Compulsions. ~
Compulsion.Type * Depression.Diagnosis * Age,
data = ocd_data)
summary(aov_res2)
ggplot(ocd_data, aes(x = Age,
y = Y.BOCS.Score..Compulsions.,
color = Depression.Diagnosis)) +
geom_smooth(method = "lm") +
labs(title = "Interaction of Depression × Age",
y = "Y-BOCS Compulsion Score")
ocd_data$AgeGroup <- cut(ocd_data$Age, breaks = c(0, 25, 40, 60, 100),
labels = c("≤25", "26–40", "41–60", "60+"))
ggplot(ocd_data, aes(x = Compulsion.Type,
y = Y.BOCS.Score..Compulsions.,
fill = Depression.Diagnosis)) +
geom_boxplot(position = position_dodge(0.8)) +
facet_wrap(~ AgeGroup) +
labs(title = "Compulsion × Depression across Age Groups")
# Linear model with interaction
lm_res <- lm(Y.BOCS.Score..Compulsions. ~ Depression.Diagnosis * Age,
data = ocd_data)
summary(lm_res)
ggplot(ocd_data, aes(x = Age,
y = Y.BOCS.Score..Compulsions.,
color = Depression.Diagnosis)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = TRUE) +
labs(title = "Linear Model: Depression × Age",
y = "Y-BOCS Compulsion Score")
ggplot(ocd_data, aes(x = Age,
y = Y.BOCS.Score..Compulsions.,
color = Depression.Diagnosis)) +
geom_point(alpha = 0.3) +
geom_smooth(method = "lm", se = TRUE) +
labs(title = "Linear Model: Depression × Age",
y = "Y-BOCS Compulsion Score")
aov_res <- aov(Y.BOCS.Score..Compulsions. ~ Compulsion.Type * Ethnicity,
data = ocd_data)
summary(aov_res)
aov_res <- aov(Y.BOCS.Score..Compulsions. ~ Compulsion.Type * Marital.Status,
data = ocd_data)
summary(aov_res)
aov_res <- aov(Y.BOCS.Score..Compulsions. ~ Compulsion.Type * Education.Level,
data = ocd_data)
summary(aov_res)
fac <- ocd_data %>% mutate(family = factor(
Family.History.of.OCD))
glm_res2<- glm(family~Y.BOCS.Score..Compulsions., family = "binomial", data = fac)
summary(glm_res2)
# Estimated marginal trends (slopes) by Depression status
emtrends(lm_res, ~ Depression.Diagnosis, var = "Age")
emm2 <- emmeans(aov_res5, ~ Depression.Diagnosis | Compulsion.Type)
emm2 <- emmeans(aov_res5, ~ Depression.Diagnosis | Compulsion.Type)
emm2 <- emmeans(aov_res, ~ Depression.Diagnosis | Compulsion.Type)
ocd_data <- read.csv('/Users/danli/Documents/healthcare_analysis/sep29:25 new analysis/ocd_patient_dataset.csv')
ocd_data <- read.csv('/Users/danli/Documents/healthcare_analysis/sep29:25 new analysis/ocd_patient_dataset.csv')
emm2 <- emmeans(aov_res, ~ Depression.Diagnosis | Compulsion.Type)
emm2 <- emmeans(aov_res, ~ Depression.Diagnosis | Compulsion.Type)
aov_res <- aov(Y.BOCS.Score..Compulsions. ~ Compulsion.Type * Depression.Diagnosis,
data = ocd_data)
summary(aov_res)
emm2 <- emmeans(aov_res, ~ Depression.Diagnosis | Compulsion.Type)
pairs(emm2, adjust = "bonferroni")
emm <- emmeans(aov_res5, ~ Compulsion.Type | Depression.Diagnosis)
emm <- emmeans(aov_res, ~ Compulsion.Type | Depression.Diagnosis)
pairs(emm, adjust = "bonferroni")
library(tidyverse)
library(ggplot2)
library(caret)
library(corrplot)
library(randomForest)
library(MASS, exclude = "select")
library(tidyverse)
library(marginaleffects)
library(broom)
library(nnet)
cdv <-read.csv("~/Documents/cardiovasculardata/cardio_train.csv", sep=";")
cdv
cdv <- cdv %>% mutate(age_yr = round(age/365, 1))
cdv <-cdv %>% mutate(bmi= weight/((height/100)^2))
cdv <- cdv %>% mutate(high_bp= ifelse(ap_hi > 140 | ap_lo > 90, 1, 0))
cdv <- cdv %>%
mutate(across(c(gender, smoke, alco, active, cardio, high_bp), as.factor))
cdv <- cdv %>% filter(ap_hi > 50, ap_hi < 250, ap_lo > 30, ap_lo < 200)
cdv
ggplot(cdv, aes(x = cardio)) +
geom_bar() +
labs(title = "Cardiovascular Disease Distribution")
ggplot(cdv, aes(x = cardio, y = age_yr, fill = cardio)) +
geom_boxplot() +
labs(title = "Age Distribution by Disease Status")
corr_vars <- cdv %>% select(age_yr, height, weight, ap_hi, ap_lo, bmi)
corrplot(cor(corr_vars), method = "color", type = "upper", tl.col = "black")
cdv.0 <- glm(cardio ~age_yr+bmi+active, family = "binomial", data= cdv)
summary(cdv.0)
cdv.1 <- glm(cardio ~age_yr*bmi*cholesterol, family = "binomial", data= cdv)
summary(cdv.1)
set.seed(42)
trainindex <- createDataPartition(cdv$cardio, p= 0.8, list = FALSE)
train <- cdv[trainindex, ]
test<- cdv[-trainindex, ]
cdv.2 <- glm(cardio ~age_yr*bmi*cholesterol, family = "binomial", data= train)
summary(cdv.2)
pred_prob <- predict(cdv.2, newdata = test, type = "response")
pred_class <- ifelse(pred_prob > 0.5, 1, 0)
confusionMatrix(as.factor(pred_class), test$cardio, positive = "1")
rf <- randomForest(cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train, ntree = 200, importance = TRUE)
pred_rf <- predict(rf, newdata = test)
confusionMatrix(pred_rf, test$cardio, positive = "1")
varImpPlot(rf)
tuneRF(x =train[, -which(names(train) == "cardio")],
y = train$cardio,
stepFactor = 1.5,
improve = 0.01,
ntreeTry= 300)
control <- trainControl(method = "cv", number =5)
grid <- expand.grid(mtry=3:6)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "rf",
trControl = control,
tuneGrid = grid,
ntree = 500
)
control <- trainControl(method = "cv", number =5)
grid <- expand.grid(mtry=3:6)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "rf",
trControl = control,
tuneGrid = grid,
ntree = 500
)
install.packages("ranger")
control <- trainControl(method = "cv", number =5)
grid <- expand.grid(mtry=3:6)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "ranger",
trControl = control,
tuneGrid = grid,
ntree = 500
)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "ranger",
trControl = control,
tuneGrid = grid,
ntree = 500
)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "ranger",  # much faster
trControl = control,
tuneGrid = grid,
num.trees = 500
)
control <- trainControl(method = "cv", number = 5)
grid <- expand.grid(mtry = 3:6)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "ranger",  # much faster
trControl = control,
tuneGrid = grid,
num.trees = 500
)
library(caret)
library(ranger)
set.seed(42)
control <- trainControl(method = "cv", number = 5)
grid <- expand.grid(
mtry = 3:6,
splitrule = "gini",          # standard for classification
min.node.size = 5            # controls tree depth; smaller = more complex trees
)
rf_cv <- train(
cardio ~ age_yr + bmi + ap_hi + ap_lo + cholesterol + gluc + smoke + alco + active,
data = train,
method = "ranger",
trControl = control,
tuneGrid = grid,
num.trees = 500,
importance = "impurity"
)
